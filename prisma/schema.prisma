// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                    String    @id @default(cuid())
  pseudo                String
  email                 String    @unique
  googleId              String?   @unique
  password              String?
  role                  Role      @default(USER)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  projects              Project[] @relation("User_Projects")
  collaboratingProjects Project[]
  collaboratingTasks    Task[]
}

model Project {
  id            String        @id @default(uuid())
  title         String
  status        ProjectStatus @default(PENDING)
  owner         User          @relation("User_Projects", fields: [ownerId], references: [id])
  ownerId       String
  description   String?
  collaborators User[]
  tasks         Task[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Task {
  id            String        @id @default(uuid())
  title         String
  description   String
  priority      TaskPriority?
  status        TaskStatus    @default(PENDING)
  project       Project       @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId     String
  collaborators User[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum ProjectStatus {
  PENDING
  DONE
  PROGRESS
}

enum TaskStatus {
  PENDING
  DONE
  PROGRESS
}

enum TaskPriority {
  HIGHT
  MEDIUM
  LOW
}
